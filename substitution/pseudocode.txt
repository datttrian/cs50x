1. Check if the program was called with 2 command-line arguments.
2. If the argument count is not 2:
   - Print an error message ("Usage: program_name key").
   - Exit with an error code (1).
3. Store the second command-line argument and its length as a string and an integer.
5. Check if the key has exactly 26 characters.
   - If the key length is not 26
      * Print an error message ("Key must contain 26 characters")
      * Exit with an error code (1).
6. Create an array of boolean values (used) to keep track of used characters in the key, initialized to all false.
7. Loop through each character in the key:
   - Check if the character is alphabetic.
   - Convert the character to lowercase and calculate its index in the alphabet.
   - Check if the character has already been used in the key.
   - If it has been used, print an error message ("Key must contain each letter exactly once") and exit with an error code (1).
   - Mark the character as used in the used array.
8. Prompt the user to input plaintext.
9. Initialize an empty string (ciphertext) to store the encrypted text.
10. Loop through each character in the plaintext:
    a. If the character is alphabetic:
       i. Calculate its index in the alphabet.
       ii. Replace the character with the corresponding character from the key while maintaining the case.
    b. If the character is not alphabetic, add it to the ciphertext unchanged.

11. Print the ciphertext.