1. Check if the program was called with 2 command-line arguments.
2. If the argument count is not 2:
   - Print an error message ("Usage: program_name key").
   - Exit with an error code (1).
3. Store the second command-line argument and its length as a string key and an integer keyLength.
5. If keyLength is not 26
   - Print an error message ("Key must contain 26 characters")
   - Exit with an error code (1).
6. Create an array used of false values to keep track of used characters in the key.
7. Loop through each character in the key:
   - If keyLength is not 26
      * Print an error message ("Key must contain only alphabetic characters.\n")
      * Exit with an error code (1).
   - Convert the character to lowercase and calculate its index in the alphabet.
   - If the index of array used is true
      * Print an error message ("Key must contain only alphabetic characters.\n")
      * Exit with an error code (1).
   - If it has been used, print an error message ("Key must contain each letter exactly once") and exit with an error code (1).
   - Mark the character as used in the used array.
8. Prompt the user to input plaintext.
9. Initialize an empty string (ciphertext) to store the encrypted text.
10. Loop through each character in the plaintext:
    a. If the character is alphabetic:
       i. Calculate its index in the alphabet.
       ii. Replace the character with the corresponding character from the key while maintaining the case.
    b. If the character is not alphabetic, add it to the ciphertext unchanged.

11. Print the ciphertext.