1. Ask the user to input a credit card number as a long long integer.
2. Initialize variables:
   - digit1 and digit2 for tracking the current and previous digits.
   - num_digits to count the number of digits processed.
   - sum_of_double_odds for the sum of digits at odd positions after doubling.
   - sum_of_evens for the sum of digits at even positions.
   - is_valid as a boolean to store whether the card is valid.
3. While there are digits in the credit card number:
   - Extract the current digit and the previous digit.
   - Determine if the current digit is at an even or odd position.
   - If it's at an even position, add it to sum_of_evens.
   - If it's at an odd position, double the digit and add its individual digits to sum_of_double_odds.
   - Move to the next digit and increment num_digits.
4. Check if the sum of sum_of_evens and sum_of_double_odds is a multiple of 10 (is_valid).
5. Extract the first two digits of the credit card number.
6. Check for conditions to identify the credit card company:
   - If the first digit is 4, and the number of digits is between 13 and 16, and it's valid, print "VISA."
   - If the first two digits are between 51 and 55, and the number of digits is 16, and it's valid, print "MASTERCARD."
   - If the first two digits are 34 or 37, and the number of digits is 15, and it's valid, print "AMEX."
   - If none of the above conditions are met, print "INVALID."
